#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

smtp {
	host=smtp.gmail.com
	#port=25
	ssl=true
	user="yanji84"
	password=""
	from="yanji84@gmail.com"
}

securesocial {
        #
        # If enabled, sets the path to your copy of Bootstrap.css to be used instead of the default one provided by SecureSocial
        #
        #bootstrapCssPath="replacement.css"
 
        #
        # If enabled, sets the Favicon to display when in SecureSocial pages
        #
        #faviconPath="your path"
  

        #
        # If enabled, sets the path to your copy of JQuery to be used instead of the default one provided by SecureSocial
        #
        #jqueryPath="replacement.js"


        #
        # If enabled, injects this Css file into all SecureSocial pages, allowing for minor style customizations
        # If you want to do major changes, please read about custom templates in SecureSocial
        #
        #customCssPath="your path"

	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	#
	onLoginGoTo=/index

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/

	#
	# Enable SSL for oauth callback urls, login/signup/password recovery pages and the authenticator cookie
	#
	ssl=false


	#
	# Parameters for the cookie used to track users.
	#	
	cookie {
		# 
		# The cookie name (defaults to 'id')
		#name=id
	
		#
		# The path for which the cookie should be sent by the browser (defaults to /)
		#
		#path=/
	
		#
		# The domain for which the cookie should be sent (it is left empty by default)
		#
		#domain=some_domain
	
		#
		# If set to true, the cookie is not readable by a client side script (defaults to true).
		#
		#httpOnly=true

		#
	        # The amount of time the session id will remain valid since the last request
		#
		idleTimeoutInMinutes=30

		#
		# The amount of time the session id will be valid since the user authenticated. 
		# After this the user will need to re-authenticate
		#
		absoluteTimeOutInMinutes=720
	}

	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		consumerKey="EBCKtNuL2sXEyqelVwHpDA"
		consumerSecret="K9ayEuxwNPQf9hJLqqLxaOutmfOMFqsGKnoO9DsFRtA"
	}

	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId="171793479649712"
		clientSecret="3c6bdfaa940e05d6d1f9b8e9c8ad66fd"
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope="email user_status read_stream"
	}

	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId="962038472979-bdm3vjlga2r6hul26shpqq0hsal732mc.apps.googleusercontent.com"
		clientSecret="7IRNMQStlzFqMj_MIK5lbkm2"
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

	linkedin {
		requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
		accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
		authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
		consumerKey="87qpfcguxzx1"
		consumerSecret="eCcrDblnNoEE14HG"
	}
    	
	github {
		authorizationUrl="https://github.com/login/oauth/authorize"
		accessTokenUrl="https://github.com/login/oauth/access_token"
		clientId="2d4f34f6f97524577a14"
		clientSecret="8546ce9e3a274d486a95d8bdcac6123c1b763102"
	}

	foursquare {
        	authorizationUrl="https://foursquare.com/oauth2/authenticate"
        	accessTokenUrl="https://foursquare.com/oauth2/access_token"
		clientId="2IL3HOQSHFPUWEVRKAJMHPAKK531QTZKHXSUFEUDQJ5JOPS1"
		clientSecret="NN1PSWAN4OP3IOU4WZLDJPAFD4OMOX0Q3ABTOKABRCEJ4JD4"
    	}

    	instagram {
        	authorizationUrl="https://api.instagram.com/oauth/authorize"
		accessTokenUrl="https://api.instagram.com/oauth/access_token"
		clientId="15c5a4962490423280eda877f9aa21a3"
		clientSecret="81a2c303af74423f8a6e9ed8b3fac928"
	}

	userpass {
		#
		# Enable username support, otherwise SecureSocial will use the emails as user names
		#
		withUserNameSupport=false
		sendWelcomeEmail=true
		enableGravatarSupport=true
		tokenDuration=60
		tokenDeleteInterval=5
		signupSkipLogin=false
	}
}
